{"version":3,"sources":["component/Checkout.js","component/routes/screens/ShippingScreen.js","Actions/shipping.js","component/rating.js","component/Product.js","types/index.js","Actions/getProducts.js","component/routes/screens/Homescreen.js","Actions/productView.js","component/routes/Loading.js","component/routes/screens/ProductViewScreen.js","Actions/addToCart.js","component/Message.js","Actions/removeFromCart.js","component/routes/screens/CartScreen.js","Actions/signin.js","component/routes/screens/Signin.js","Actions/register.js","component/routes/screens/Register.js","component/routes/screens/Payment.js","component/routes/screens/Order.js","Actions/makeOrder.js","Main.js","Reducers/Product_Reducer.js","Reducers/Product_View.js","store.js","Reducers/AddToCart.js","Reducers/Signin.js","Reducers/Register.js","Reducers/Shipping.js","index.js"],"names":["Step","Steps","Checkout","props","current","step","responsive","status","title","description","step1","step2","step3","step4","ShippingScreen","userInfo","useSelector","state","user","cartItems","cart","history","useHistory","dispatch","useDispatch","useState","username","address","country","city","postal","shippingInfo","setShippingInfo","handleChange","e","name","target","value","length","labelCol","span","wrapperCol","Item","label","rules","required","message","prefix","UserOutlined","onChange","min","size","offset","type","onClick","param","getState","a","payload","localStorage","setItem","JSON","stringify","shipping","push","Rating","rating","numReviews","className","Product","price","image","_id","href","src","alt","get_products","product_view_success","product_view_loading","removeFromCart","axios","require","Homescreen","useEffect","method","url","then","res","data","products","map","productView","get","console","log","Loading","Productviewscreen","id","useParams","quantity","setQuantity","product_view","single_product","loading","product","to","class","inStockCount","Array","keys","x","addToCart","qty","Message","children","removeAction","CartScreen","location","search","split","item","Number","reduce","disabled","Signin_screen","email","password","people","setPeople","Fragment","placeholder","post","catch","err","result","alert","RegisterScreen","firstname","lastname","person","setPerson","Payment","shippingaddr","payment","setPayment","setLoading","setTimeout","customSpin","LoadingOutlined","spin","style","fontSize","position","indicator","Group","defaultValue","buttonStyle","margin","Button","Order","charAt","toUpperCase","slice","getItem","icon","RightSquareOutlined","Main","visible","setVisible","shape","backgroundColor","color","concat","placement","onClose","headerStyle","bodyStyle","closeIcon","DoubleLeftOutlined","removeItem","window","reload","path","exact","Product_Reducer","action","Product_View","allReducers","combineReducers","existItem","find","removed_id","newCartItem","filter","error","register","composeEnhanced","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","parse","store","createStore","applyMiddleware","thunk","App","ReactDom","render","document","getElementById"],"mappings":"mUASQA,EAASC,IAATD,KAOKE,EAAW,SAACC,GACvB,OACE,eAAC,IAAD,CAAOC,QAASD,EAAME,KAAMC,YAAY,EAAxC,UACE,cAACN,EAAD,CACEO,OAAO,SACPC,MAAM,SACNC,YAAY,qCAEd,cAACT,EAAD,CACEO,OAAQJ,EAAMO,MAAQP,EAAMO,MAAQ,OACpCF,MAAM,WACNC,YAAY,kCAEd,cAACT,EAAD,CACEO,OAAQJ,EAAMQ,MAAQR,EAAMQ,MAAQ,OACpCH,MAAM,UACNC,YAAY,+DAEd,cAACT,EAAD,CACEO,OAAQJ,EAAMS,MAAQT,EAAMS,MAAQ,OACpCJ,MAAM,QACNC,YAAY,yBAEd,cAACT,EAAD,CACEO,OAAQJ,EAAMU,MAAQV,EAAMU,MAAQ,OACpCL,MAAM,eACNC,YAAY,qB,oECiGLK,EAlIQ,WACrB,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,YAC7CI,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMG,KAAKD,aAC9CE,EAAUC,cACVC,EAAWC,cAEjB,EAAwCC,mBAAS,CAC/CC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,OAAQ,KALV,mBAAOC,EAAP,KAAqBC,EAArB,KAYMC,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MACvBL,EAAgB,2BAAKD,GAAN,kBAAqBI,EAAOE,MAqB7C,OACE,mCACGtB,EAAS,IAAMI,EAAUmB,OAAS,EACjC,gCACE,cAAC,EAAD,CAAUjC,KAAM,EAAGK,MAAM,YACzB,eAAC,IAAD,CAAM6B,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,IAAjD,UACE,cAAC,IAAKE,KAAN,CACEC,MAAM,WACNR,KAAK,WACLS,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCANf,SAUE,cAAC,IAAD,CACEC,OAAQ,cAACC,EAAA,EAAD,IACRb,KAAK,WACLE,MAAON,EAAaL,SACpBuB,SAAUhB,MAId,cAAC,IAAKS,KAAN,CACEP,KAAK,UACLQ,MAAM,UACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uBAHrC,SAKE,cAAC,IAAD,CACEX,KAAK,UACLE,MAAON,EAAaJ,QACpBsB,SAAUhB,MAId,cAAC,IAAKS,KAAN,CACEP,KAAK,OACLQ,MAAM,OACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BAHrC,SAKE,cAAC,IAAD,CACEX,KAAK,OACLE,MAAON,EAAaF,KACpBoB,SAAUhB,MAId,cAAC,IAAKS,KAAN,CACEP,KAAK,UACLQ,MAAM,UACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uBAHrC,SAKE,cAAC,IAAD,CACEX,KAAK,UACLE,MAAON,EAAaH,QACpBqB,SAAUhB,MAId,cAAC,IAAKS,KAAN,CACEP,KAAK,SACLQ,MAAM,SACNC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,2BAHrC,SAKE,cAAC,IAAD,CACEI,IAAK,EACLC,KAAK,QACLd,MAAON,EAAaD,OACpBK,KAAK,SACLc,SAAUhB,MAId,cAAC,IAAKS,KAAN,CAAWP,KAAK,SAASM,WAAY,CAAEW,OAAQ,GAAIZ,KAAM,IAAzD,SACE,cAAC,IAAD,CAAQa,KAAK,UAAUC,QAxFd,WClCC,IAACC,EDmCjBxB,IACFR,GCpCmBgC,EDoCDxB,ECpCA,uCAAW,WAAOR,EAAUiC,GAAjB,SAAAC,EAAA,sDACjClC,EAAS,CAAE8B,KAAM,WAAYK,QAASH,IACtCI,aAAaC,QACX,eACAC,KAAKC,UAAUN,IAAWO,SAAShC,eAJJ,2CAAX,0DDqClBC,EAAgB,CACdN,SAAU,GACVG,KAAM,GACNF,QAAS,GACTG,OAAQ,GACRF,QAAS,KAEXP,EAAQ2C,KAAK,cA8EL,8BAON3C,EAAQ2C,KAAK,e,QElENC,EAjEA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACxB,OACE,sBAAKC,UAAU,SAAf,UAGE,+BACE,mBACEA,UACEF,GAAU,EACN,aACAA,GAAU,GACV,oBACA,mBAIV,+BACE,mBACEE,UACEF,GAAU,EACN,aACAA,GAAU,IACV,oBACA,mBAIV,+BACE,mBACEE,UACEF,GAAU,EACN,aACAA,GAAU,IACV,oBACA,mBAIV,+BACE,mBACEE,UACEF,GAAU,EACN,aACAA,GAAU,IACV,oBACA,mBAIV,+BACE,mBACEE,UACEF,GAAU,EACN,aACAA,GAAU,IACV,oBACA,mBAIV,yCAAUC,EAAV,kBChCSE,EA3BC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,MAAOJ,EAA8B,EAA9BA,WAAYD,EAAkB,EAAlBA,OAAQM,EAAU,EAAVA,IACnD,OACE,sBAAKJ,UAAU,OAAf,UAEE,mBAAGK,KAAI,oBAAeD,GAAtB,SACE,qBAAKE,IAAKH,EAAOH,UAAU,aAAaO,IAAI,gBAI9C,sBAAKP,UAAU,YAAf,UAEE,qBAAKA,UAAU,OAAf,SACE,mBAAGK,KAAI,oBAAeD,GAAtB,SACE,+CAKJ,cAAC,EAAD,CAAQN,OAAQA,EAAQC,WAAYA,IAGpC,qBAAKC,UAAU,QAAf,SAAwBE,SAnBDE,ICLlBI,EAAe,eACfC,EAAuB,uBAEvBC,EAAuB,uBACvBC,EAAiB,mBCHxBC,EAAQC,EAAQ,IC6BPC,EAvBI,WAKjB,IAAM3D,EAAWC,cACjB2D,qBAAU,WACR5D,EDXuB,uCAAM,WAAOA,GAAP,SAAAkC,EAAA,sEACzBuB,EAAM,CACVI,OAAQ,MACRC,IAAK,gDACJC,MAAK,SAACC,GACP,IAAQC,EAASD,EAATC,KACRjE,EAAS,CAAE8B,KAAMuB,EAAclB,QAAS8B,EAAKA,UANhB,2CAAN,yDCYtB,CAACjE,IAEJ,IACQkE,EADKzE,aAAY,SAACC,GAAD,OAAWA,EAAMwE,YAClCA,SAER,OACE,qBAAKrB,UAAU,aAAf,SAEGqB,EAASC,KAAI,SAACF,GACb,OAAO,cAAC,EAAD,eAA4BA,GAAdA,EAAKhB,W,QClB5BQ,EAAQC,EAAQ,IAiBPU,EAfK,SAACnB,GAAD,8CAAS,WAAOjD,GAAP,iBAAAkC,EAAA,6DAI3BlC,EAAS,CAAE8B,KAAMyB,IAJU,kBAMFE,EAAMY,IAAN,sDAC0BpB,IAPxB,gBAMjBgB,EANiB,EAMjBA,KAGRjE,EAAS,CAAE8B,KAAMwB,EAAsBnB,QAAS8B,EAAKA,OAT5B,gDAWzBK,QAAQC,IAAR,MAXyB,yDAAT,uD,SCLPC,EAAU,WAErB,OACE,8BACE,iCACE,cAAC,IAAD,IADF,gBCwISC,EAhIW,WACxB,IAAQC,EAAOC,cAAPD,GACF5E,EAAUC,cAEVC,EAAWC,cACjB,EAAgCC,mBAAS,GAAzC,mBAAO0E,EAAP,KAAiBC,EAAjB,KAEAjB,qBAAU,WACR5D,EAASoE,EAAYM,MACpB,CAAC1E,EAAU0E,IAEd,MAAoCjF,aAClC,SAACC,GAAD,OAAWA,EAAMoF,gBADXC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,QAIlBC,EAAUF,EAAe,GAM/B,OACE,8BACGC,EACC,cAAC,EAAD,IAGA,sBAAKnC,UAAU,UAAf,UACE,cAAC,IAAD,CAAMqC,GAAG,IAAT,SACE,iCACE,mBAAGC,MAAM,mBAAmB,cAAY,SAD1C,qBAKF,qBAAKtC,UAAU,QAAf,SACE,qBAAKA,UAAU,QAAQM,IAAK8B,EAAQjC,MAAOI,IAAK6B,EAAQrE,SAE1D,qBAAKiC,UAAU,QAAf,SACE,+BACE,wCAAWoC,EAAQrE,QACnB,6BACE,cAAC,EAAD,CACE+B,OAAQsC,EAAQtC,OAChBC,WAAYqC,EAAQrC,eAGxB,+CAAkBqC,EAAQ/F,eAC1B,yCAAY+F,EAAQlC,cAGxB,qBAAKF,UAAU,QAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,+BACE,6BACE,sBAAKA,UAAU,MAAf,UACE,wCACA,8BAAMoC,EAAQlC,aAGlB,6BACE,8BACE,cAAC,EAAD,CACEJ,OAAQsC,EAAQtC,OAChBC,WAAYqC,EAAQrC,iBAI1B,6BACE,sBAAKC,UAAU,MAAf,UACE,wCACA,8BACE,uBACEA,UACEoC,EAAQG,cAAgB,EACpB,UACAH,EAAQG,aAAe,GACvBH,EAAQG,aAAe,EACvB,cACA,SAPR,qBAUWH,EAAQG,aAVnB,cAeLH,EAAQG,aAAe,GACtB,qCACE,qBAAKvC,UAAU,MAAf,SACE,+BACE,uCACA,8BACE,wBACE/B,MAAO8D,EACPlD,SAAU,SAACf,GAAD,OAAOkE,EAAYlE,EAAEE,OAAOC,QAFxC,SAIG,YAAIuE,MAAMJ,EAAQG,cAAcE,QAAQnB,KACvC,SAACoB,GAAD,OACE,wBAAoBzE,MAAOyE,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,eAS7B,oBAAI1C,UAAU,aAAd,SACE,wBACEf,KAAK,SACLe,UAAU,MACVd,QA9FE,SAACpB,GACvBb,EAAQ2C,KAAR,gBAAsBiC,EAAtB,gBAAgCE,KA0Fd,2CC3HhBnB,EAAQC,EAAQ,IAET8B,EAAY,SAACvC,EAAKwC,GAAN,8CAAc,WAAOzF,EAAUiC,GAAjB,mBAAAC,EAAA,+EAKZuB,EAAMY,IAAN,kDACsBpB,IANV,gBAK3BgB,EAL2B,EAK3BA,KAGFgB,EAAUhB,EAAKA,KAAK,GAC1BjE,EAAS,CACP8B,KAAM,YACNK,QAAS,CACPvB,KAAMqE,EAAQrE,KACdmC,MAAOkC,EAAQlC,MACfC,MAAOiC,EAAQjC,MACfiC,QAASA,EAAQhC,IACjBwC,SAGJrD,aAAaC,QACX,YACAC,KAAKC,UAAUN,IAAWpC,KAAKD,YArBE,kDAwBnC0E,QAAQC,IAAI,KAAMhD,SAxBiB,0DAAd,yDCFZmE,EAAU,SAAC9G,GACtB,OAAO,qBAAKiE,UAAU,QAAf,SAAwBjE,EAAM+G,YCC1BC,G,cAAe,SAAClB,GAAD,8CAAQ,WAAO1E,EAAUiC,GAAjB,SAAAC,EAAA,sDAClClC,EAAS,CAAE8B,KAAM0B,EAAgBrB,QAASuC,IAC1CtC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUN,IAAWpC,KAAKD,YAF/B,2CAAR,0DCoGbiG,EA3FI,WAIjB,IAAM7F,EAAWC,cACTyE,EAAOC,cAAPD,GACF5E,EAAUC,cACV0F,EAAM3F,EAAQgG,SAASC,OAAOC,MAAM,KAAK,GAEvCpG,EADKH,aAAY,SAACC,GAAD,OAAWA,EAAMG,QAClCD,UAMR,OAJAgE,qBAAU,WACR5D,EAASwF,EAAUd,EAAIe,MACtB,CAACzF,EAAU0E,EAAIe,IAGhB,sBAAK5C,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAf,SACwB,IAArBjD,EAAUmB,OACT,eAAC,EAAD,yBACa,cAAC,IAAD,CAAMmE,GAAG,IAAT,4BAGb,6BACGtF,EAAUuE,KAAI,SAAC8B,GACd,OACE,uBAAyBpD,UAAU,OAAnC,UACE,qBAAKA,UAAU,oBAAf,SACE,qBACEM,IAAK8C,EAAKjD,MACVI,IAAK6C,EAAKrF,KACViC,UAAU,8BAGd,qBAAKA,UAAU,yBAAf,SACE,cAAC,IAAD,CAAMqC,GAAE,oBAAee,EAAKhB,SAA5B,SAAwCgB,EAAKrF,SAE/C,qBAAKiC,UAAU,oBAAf,SACE,wBACE/B,MAAOmF,EAAKR,IACZ/D,SAAU,SAACf,GAAD,OACRX,EACEwF,EAAUS,EAAKhB,QAASiB,OAAOvF,EAAEE,OAAOC,UAJ9C,SAQG,YAAIuE,MAAMa,OAAOD,EAAKR,MAAMH,QAAQnB,KAAI,SAACoB,GAAD,OACvC,wBAAoBzE,MAAOyE,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,UAMvB,qBAAK1C,UAAU,0BAAf,SAA0CoD,EAAKlD,QAC/C,qBAAKF,UAAU,oBAAf,SACE,wBACEf,KAAK,SACLe,UAAU,2BACVd,QAAS,kBAAM/B,EAAS4F,EAAaK,EAAKhB,WAH5C,wBA7BOgB,EAAKhB,gBA2C1B,sBAAKpC,UAAU,mBAAf,UACE,wDAEGjD,EAAUuG,QAAO,SAACjE,EAAGqD,GAAJ,OAAUrD,EAAIgE,OAAOX,EAAEE,OAAM,GAFjD,iBAGiB,IACd7F,EAAUuG,QAAO,SAACjE,EAAGqD,GAAJ,OAAUrD,EAAIgE,OAAOX,EAAEE,IAAMF,EAAExC,SAAQ,GAJ3D,OAMA,8BACE,wBACEjB,KAAK,SACLe,UAAU,eACVuD,WAAUxG,EAAUmB,OAAS,GAC7BgB,QAAS,kBAAMjC,EAAQ2C,KAAK,+BAJ9B,0CCxFJgB,EAAQC,EAAQ,ICQT2C,G,OAAgB,WAC3B,IAAMrG,EAAWC,cAIjB,GAHaR,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,YAGnBU,mBAAS,CAAEoG,MAAO,GAAIC,SAAU,MAA5D,mBAAOC,EAAP,KAAeC,EAAf,KAGM/F,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvB2F,EAAU,2BAAKD,GAAN,kBAAe5F,EAAOE,MAE3BhB,EAAUC,cAehB,OACE,cAAC,IAAM2G,SAAP,UACE,qBAAK7D,UAAU,aAAf,SACE,iCACE,uBACEf,KAAK,OACLlB,KAAK,QACLE,MAAO0F,EAAOF,MACdK,YAAY,mBACZjF,SAAUhB,IAEZ,uBACEoB,KAAK,WACLlB,KAAK,WACLE,MAAO0F,EAAOD,SACdI,YAAY,sBACZjF,SAAUhB,IAEZ,wBAAQoB,KAAK,SAASC,QA/BT,WAIjB,ID1BiBC,ECuBfwE,GACFxG,GDxBiBgC,ECwBDwE,EDxBA,uCAAW,WAAOxG,EAAUiC,GAAjB,qBAAAC,EAAA,6DAGvBoE,EAAoBtE,EAApBsE,MAAOC,EAAavE,EAAbuE,SAHgB,SAKV9C,EAClBmD,KAAK,kDAAmD,CACvDN,MAAOA,EACPC,SAAUA,IAEXM,OAAM,SAACC,GAAD,OAAS9G,EAAS,CAAE8B,KAAM,QAASK,QAAS2E,EAAIvF,aAV1B,OAKzBwF,EALyB,OAY/B,IAEU9C,EAAS8C,EAAT9C,KAERjE,EAAS,CAAE8B,KAAM,SAAUK,QAAS8B,IACpC7B,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,IAAWtC,KAAKH,WAChE,MAAOsH,GACP9G,EAAS,CAAE8B,KAAM,QAASK,QAAS2E,EAAIvF,UAnBV,2CAAX,0DCyBhBkF,EAAU,CAAEH,MAAO,GAAIC,SAAU,KAEtB,YADCzG,EAAQgG,SAASC,OAAOC,MAAM,KAAK,IAE7ClG,EAAQ2C,KAAK,cAGfuE,MAAM,iCAsBF,oBAGA,oDACqB,cAAC,IAAD,CAAM9B,GAAG,YAAT,kCC3DzBzB,EAAQC,EAAQ,ICKTuD,EAAiB,WAO5B,MAA4B/G,mBAAS,CACnCgH,UAAW,GACXC,SAAU,GACVb,MAAO,GACPC,SAAU,KAJZ,mBAAOa,EAAP,KAAeC,EAAf,KAOMrH,EAAWC,cAEXS,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAEvBuG,EAAU,2BAAKD,GAAN,kBAAexG,EAAOE,MAQjC,OACE,cAAC,IAAM4F,SAAP,UACE,qBAAK7D,UAAU,aAAf,SACE,iCACE,uBACEf,KAAK,OACLlB,KAAK,YACL+F,YAAY,YACZ7F,MAAOsG,EAAOF,UACdxF,SAAUhB,IAEZ,uBACEoB,KAAK,OACLlB,KAAK,WACL+F,YAAY,WACZ7F,MAAOsG,EAAOD,SACdzF,SAAUhB,IAEZ,uBACEoB,KAAK,OACLlB,KAAK,QACL+F,YAAY,cACZ7F,MAAOsG,EAAOd,MACd5E,SAAUhB,IAEZ,uBACEoB,KAAK,WACLlB,KAAK,WACL+F,YAAY,WACZ7F,MAAOsG,EAAOb,SACd7E,SAAUhB,IAEZ,wBAAQoB,KAAK,SAASC,QArCT,SAACpB,GD1BM,IAACqB,EC2B3BhC,GD3B2BgC,EC2BHoF,ED3BE,uCAAW,WAAOpH,GAAP,yBAAAkC,EAAA,sDAC/BgF,EAAyClF,EAAzCkF,UAAWC,EAA8BnF,EAA9BmF,SAAUb,EAAoBtE,EAApBsE,MAAOC,EAAavE,EAAbuE,SAC9BpG,EAAW+G,EAAY,IAAMC,EAC7BxH,EAAO8D,EACVmD,KAAK,oDAAqD,CACzDzG,WACAmG,QACAC,aAEDM,OAAM,SAACC,GAAD,OAAS9G,EAAS,CAAE8B,KAAM,QAASK,QAAS2E,EAAIvF,aACzDvB,EAAS,CAAE8B,KAAM,WAAYK,QAASxC,IAVC,2CAAX,wDC4B1B0H,EAAU,CAAEH,UAAW,GAAIC,SAAU,GAAIb,MAAO,GAAIC,SAAU,MAmCxD,8B,iBCFKe,EAtDC,WACd,IAAMC,EAAe9H,aAAY,SAACC,GAAD,OAAWA,EAAM8C,SAAShC,gBACrDV,EAAUC,cAChB,EAA8BG,mBAAS,UAAvC,mBAAOsH,EAAP,KAAgBC,EAAhB,KACA,EAA8BvH,oBAAS,GAAvC,mBAAO8E,EAAP,KAAgB0C,EAAhB,KAMMhH,EAAe,SAACC,GACpB8G,EAAW9G,EAAEE,OAAOC,OACpBsB,aAAaC,QAAQ,UAAWC,KAAKC,UAAUiF,IAC/CE,GAAW,GACXC,YAAW,WACT7H,EAAQ2C,KAAK,iBACZ,MAGCmF,EAAa,cAACC,EAAA,EAAD,CAAiBC,MAAI,EAACC,MAAO,CAAEC,SAAU,MAC5D,OACE,mCACGT,EAAapH,SACZ,gCACE,cAAC,EAAD,aACEnB,OAAO,UACPG,MAAM,SACNC,MAAM,WAHR,SAIS,WAET,sBAAK2I,MAAO,CAAEE,SAAU,YAAxB,UACGjD,EAAU,cAAC,IAAD,CAAMkD,UAAWN,IAAiB,GAE7C,eAAC,IAAMO,MAAP,CACEC,aAAa,IACbC,YAAY,QACZN,MAAO,CAAEO,OAAQ,WAHnB,UAKE,cAAC,IAAMC,OAAP,CAAczH,MAAM,SAASY,SAAUhB,EAAvC,oBAGA,cAAC,IAAM6H,OAAP,CAAczH,MAAM,SAASY,SAAUhB,EAAvC,6BAONZ,EAAQ2C,KAAK,gB,kBC7CR+F,ICCC9E,EAAQ,IDDD,WACnB,IACQ9D,EADKH,aAAY,SAACC,GAAD,OAAWA,EAAMG,QAClCD,UACFI,EAAWC,cACXH,EAAUC,cAERS,EADKf,aAAY,SAACC,GAAD,OAAWA,EAAM8C,YAClChC,aACFJ,EACJI,EAAaJ,QACb,IACAI,EAAaF,KAAKmI,OAAO,GAAGC,cAC5BlI,EAAaF,KAAKqI,MAAM,GACxB,IACAnI,EAAaH,QAAQoI,OAAO,GAAGC,cAC/BlI,EAAaH,QAAQsI,MAAM,GAC3B,IACAnI,EAAaD,OACTiH,EAAUpF,aAAawG,QAAQ,WAC/B7F,EAAQnD,EAAUuG,QAAO,SAACjE,EAAGqD,GAAJ,OAAUrD,EAAIgE,OAAOX,EAAEE,IAAMF,EAAExC,SAAQ,GAC3DmD,OAAQ,GAAYnD,EAAQ,GAKvC,OACE,gCACE,cAAC,EAAD,CAAUjE,KAAM,EAAGO,MAAM,UAAUF,MAAM,SAASC,MAAM,WACxD,sBAAKyD,UAAU,kBAAf,UACE,sBAAKA,UAAU,KAAf,UACE,0CACA,wCAAWrC,EAAaL,YACxB,0CAAaC,QAEf,sBAAKyC,UAAU,KAAf,UACE,+CACA,8CAEGjD,EAAUuG,QAAO,SAACjE,EAAGqD,GAAJ,OAAUrD,EAAIgE,OAAOX,EAAEE,IAAMF,EAAExC,SAAQ,MAE3D,gDACA,yCACA,8CAAiBmD,OAAQ,GAAYnD,EAAQ,MAC7C,cAAC,IAAD,CACEjB,KAAK,UACLC,QAxBW,WACnB/B,EClBkB,uCAAoB,WAAOA,GAAP,SAAAkC,EAAA,sDACxClC,EAAS,CAAE8B,KAAM,YADuB,2CAApB,uDDmBlBhC,EAAQ2C,KAAK,kBAuBLoG,KAAM,cAACC,EAAA,EAAD,IAHR,2BAQF,sBAAKjG,UAAU,KAAf,UACE,yCACA,yCAAY2E,QAGd,sBAAK3E,UAAU,KAAf,UACE,4CACA,8BACE,6BACGjD,EAAUuE,KAAI,SAAC8B,GACd,OACE,uBAAyBpD,UAAU,OAAnC,UACE,qBAAKA,UAAU,oBAAf,SACE,qBACEM,IAAK8C,EAAKjD,MACVI,IAAK6C,EAAKrF,KACViC,UAAU,8BAGd,qBAAKA,UAAU,yBAAf,SACE,cAAC,IAAD,CAAMqC,GAAE,oBAAee,EAAKhB,SAA5B,SAAwCgB,EAAKrF,SAE/C,qBAAKiC,UAAU,oBAAf,SACE,wBACE/B,MAAOmF,EAAKR,IACZ/D,SAAU,SAACf,GAAD,OACRX,EACEwF,EAAUS,EAAKhB,QAASiB,OAAOvF,EAAEE,OAAOC,UAJ9C,SAQG,YAAIuE,MAAMa,OAAOD,EAAKR,MAAMH,QAAQnB,KAAI,SAACoB,GAAD,OACvC,wBAAoBzE,MAAOyE,EAAI,EAA/B,SACGA,EAAI,GADMA,EAAI,UAMvB,qBAAK1C,UAAU,0BAAf,SAA0CoD,EAAKlD,QAC/C,qBAAKF,UAAU,oBAAf,SACE,wBACEf,KAAK,SACLe,UAAU,2BACVd,QAAS,kBAAM/B,EAAS4F,EAAaK,EAAKhB,WAH5C,wBA7BOgB,EAAKhB,2BEkFnB8D,GArIF,WACKhJ,cAAhB,IAMQH,EADKH,aAAY,SAACC,GAAD,OAAWA,EAAMG,QAClCD,UAMAJ,EADKC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAClCH,SAGFQ,EAAWC,cAOjB,EAA8BC,oBAAS,GAAvC,mBAAO8I,EAAP,KAAgBC,EAAhB,KAOA,OACE,cAAC,IAAD,UACE,sBAAKpG,UAAU,iBAAf,UACE,yBAAQA,UAAU,MAAlB,UAEE,8BACE,cAAC,IAAD,CAAMqC,GAAG,IAAIrC,UAAU,QAAvB,sBAMF,gCACE,eAAC,IAAD,CAAMqC,GAAG,QAAT,iBAEGtF,EAAUmB,OAAS,GAClB,sBAAM8B,UAAU,QAAhB,SAAyBjD,EAAUmB,YAGtCvB,EAASuB,OAAS,EACjB,cAAC,IAAD,CACEmI,MAAM,SACNnB,MAAO,CAAEoB,gBAAiB,SAAUC,MAAO,SAC3CrH,QA7BI,WAChBkH,GAAW,IAyBD,SAKGzJ,EAAS,GAAGW,SACV6F,MAAM,KAAK,GACXyC,OAAO,GACPY,OAAO7J,EAAS,GAAGW,SAAS6F,MAAM,KAAK,GAAGyC,OAAO,MAGtD,cAAC,IAAD,CAAMvD,GAAG,WAAT,2BAMN,eAAC,IAAD,CACEjG,MAAM,WACNqK,UAAU,OAEVN,QAASA,EACTO,QA7CY,WAClBN,GAAW,IA6CLO,YAAa,CAAEL,gBAAiB,WAChCM,UAAW,CAAEN,gBAAiB,SAC9BO,UAAW,cAACC,EAAA,EAAD,IARb,UAUGnK,EAASuB,OAAS,EACjB,cAAC,IAAD,CAAMmE,GAAG,IAAT,SAAc1F,EAAS,GAAGW,WAE1B,sBAEF,sBACA,cAAC,IAAD,CAAM+E,GAAG,IAAInD,QAlEL,WACd/B,EPfmB,uCAAM,WAAOA,GAAP,SAAAkC,EAAA,sDAC3BE,aAAawH,WAAW,YACxBxH,aAAawH,WAAW,aAFG,2CAAN,uDOgBnBC,OAAO/D,SAASgE,QAAO,IAgEjB,SACE,mBAAGjH,UAAU,iBAAiB,cAAY,OAA1C,yBAdE,QAoBN,+BAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAIF,cAAC,IAAD,CACED,KAAK,gBACLpE,SAAU,cAAC,EAAD,MAIZ,cAAC,IAAD,CAAOoE,KAAK,aAAapE,SAAU,cAAC,EAAD,MAGnC,cAAC,IAAD,CAAOoE,KAAK,WAAWpE,SAAU,cAAC,EAAD,MAGjC,cAAC,IAAD,CAAOoE,KAAK,YAAYpE,SAAU,cAAC,EAAD,MAGlC,cAAC,IAAD,CAAOoE,KAAK,YAAYpE,SAAU,cAAC,EAAD,MAGlC,cAAC,IAAD,CAAOoE,KAAK,WAAWpE,SAAU,cAAC,EAAD,MAGjC,cAAC,IAAD,CAAOoE,KAAK,cAAcpE,SAAU,cAAC,GAAD,WAIxC,wBAAQ9C,UAAU,aAAlB,SACE,4D,kBCzIKoH,GATS,WAAuC,IAAtCvK,EAAqC,uDAA7B,CAAEwE,SAAU,IAAMgG,EAAW,uCAC5D,OAAQA,EAAOpI,MACb,KAAKuB,EACH,OAAO,2BAAK3D,GAAZ,IAAmBwE,SAAUgG,EAAO/H,UACtC,QACE,OAAOzC,ICaEyK,GAdM,WAGf,IAFJzK,EAEG,uDAFK,CAAEqF,eAAgB,GAAIC,SAAS,GACvCkF,EACG,uCACH,OAAQA,EAAOpI,MACb,KAAKyB,EACH,OAAO,2BAAK7D,GAAZ,IAAmBsF,SAAS,IAC9B,KAAK1B,EACH,OAAO,2BAAK5D,GAAZ,IAAmBqF,eAAgBmF,EAAO/H,QAAS6C,SAAS,IAC9D,QACE,OAAOtF,I,UCPP0K,GAAcC,aAAgB,CAClCnG,SAAU+F,GACVnF,aAAcqF,GACdtK,KCVuB,WAAwC,IAAvCH,EAAsC,uDAA9B,CAAEE,UAAW,IAAMsK,EAAW,uCAO9D,OAAQA,EAAOpI,MACb,IAAK,YACH,IAAMmE,EAAOiE,EAAO/H,QACdmI,EAAY5K,EAAME,UAAU2K,MAAK,SAAChF,GAAD,OAAOA,EAAEN,UAAYgB,EAAKhB,WACjE,OAAIqF,EACK,2BACF5K,GADL,IAEEE,UAAWF,EAAME,UAAUuE,KAAI,SAACoB,GAAD,OAC7BA,EAAEN,UAAYqF,EAAUrF,QAAUgB,EAAOV,OAItC,2BAAK7F,GAAZ,IAAmBE,UAAU,GAAD,mBAAMF,EAAME,WAAZ,CAAuBqG,MAEvD,KAAKzC,EAIH,IAAMgH,EAAaN,EAAO/H,QACpBsI,EAAc/K,EAAME,UAAU8K,QAClC,SAACnF,GAAD,OAAOA,EAAEN,UAAYuF,KAGvB,OADApI,aAAawH,WAAW,aACjB,2BAAKlK,GAAZ,IAAmBE,UAAW6K,IAChC,QACE,OAAO/K,IDrBXC,KEboB,WAAkD,IAAjDD,EAAgD,uDAAxC,CAAEF,SAAU,GAAImL,MAAO,IAAMT,EAAW,uCACrE,OAAQA,EAAOpI,MACb,IAAK,SACH,IAAQnC,EAASuK,EAAO/H,QAAhBxC,KACR,OAAO,2BAAKD,GAAZ,IAAmBF,SAAUG,IAC/B,IAAK,QACH,OAAO,2BAAKD,GAAZ,IAAmBiL,MAAOT,EAAO/H,UACnC,QACE,OAAOzC,IFMXkL,SGdsB,WAAmC,IAAlClL,EAAiC,uDAAzB,CAAEC,KAAM,IAAMuK,EAAW,uCACxD,OAAQA,EAAOpI,MACb,IAAK,WACH,OAAO,2BAAKpC,GAAZ,IAAmBC,KAAMuK,EAAO/H,UAClC,QACE,OAAOzC,IHUX8C,SIfsB,WAA2C,IAA1C9C,EAAyC,uDAAjC,CAAEc,aAAc,IAAM0J,EAAW,uCAChE,OAAQA,EAAOpI,MACb,IAAK,WACH,OAAO,2BAAKpC,GAAZ,IAAmBc,aAAc0J,EAAO/H,UAC1C,QACE,OAAOzC,MJYPmL,GAAkBhB,OAAOiB,sCAAwCC,KACjEC,GAAe,CACnBnL,KAAM,CACJD,UAAWwC,aAAawG,QAAQ,aAC5BtG,KAAK2I,MAAM7I,aAAawG,QAAQ,cAChC,IAENjJ,KAAM,CACJH,SAAU4C,aAAawG,QAAQ,YAC3BtG,KAAK2I,MAAM7I,aAAawG,QAAQ,aAChC,IAENpG,SAAU,CACRhC,aAAc4B,aAAawG,QAAQ,YAC/BtG,KAAK2I,MAAM7I,aAAawG,QAAQ,aAChC,KASOsC,GANDC,aACZf,GACAY,GACAH,GAAgBO,aAAgBC,QK/B5BC,GAAM,WACV,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,GAAD,OAKNK,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.820dfe29.chunk.js","sourcesContent":["import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n  UserOutlined,\n  ShoppingCartOutlined,\n  DollarOutlined,\n} from \"@ant-design/icons\";\n\n//ui\nconst { Step } = Steps; //get the step from steps\n\n/**\n * \n * @param {*} props \n * @returns \n */\nexport const Checkout = (props) => {\n  return (\n    <Steps current={props.step} responsive={true}>\n      <Step\n        status=\"finish\"\n        title=\"signin\"\n        description=\"User must have signed in already\"\n      />\n      <Step\n        status={props.step1 ? props.step1 : \"wait\"}\n        title=\"shipping\"\n        description=\"User enters the shipping info\"\n      />\n      <Step\n        status={props.step2 ? props.step2 : \"wait\"}\n        title=\"payment\"\n        description=\"User makes payment. The white region signifies the choosen\"\n      />\n      <Step\n        status={props.step3 ? props.step3 : \"wait\"}\n        title=\"Order\"\n        description=\"User makes his order\"\n      />\n      <Step\n        status={props.step4 ? props.step4 : \"wait\"}\n        title=\"Order detail\"\n        description=\"Order detail\"\n      />\n    </Steps>\n  );\n}; //javascript function definition\n","import React from \"react\";\nimport { Checkout } from \"../../Checkout\";\nimport { Form, Input, InputNumber, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { shipping } from \"../../../Actions/shipping\";\n\nconst ShippingScreen = () => {\n  const userInfo = useSelector((state) => state.user.userInfo); //get the user from reduc store\n  const cartItems = useSelector((state) => state.cart.cartItems); //\n  const history = useHistory();\n  const dispatch = useDispatch();\n  //----------------state to hanle the shipping info---------------//\n  const [shippingInfo, setShippingInfo] = useState({\n    username: \"\",\n    address: \"\",\n    country: \"\",\n    city: \"\",\n    postal: \"\",\n  }); //useState definition\n\n  //--------function-------------//\n  /**\n   * This function is meant to update the state when the user types in the input field\n   */\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setShippingInfo({ ...shippingInfo, [name]: value }); //update the state base on the name and value\n  }; //javascript function definiton\n\n  //------------function------------//\n  /**\n   * This function is calls an action when the button is clicked\n   * passing the shipping info to the reducer and store\n   */\n  const handleSubmit = () => {\n    if (shippingInfo) {\n      dispatch(shipping(shippingInfo)); //dispatch action\n      setShippingInfo({\n        username: \"\",\n        city: \"\",\n        address: \"\",\n        postal: \"\",\n        country: \"\",\n      });\n      history.push(\"/payment\");\n    }\n  }; //javascript function definition\n  return (\n    <>\n      {userInfo[0] && cartItems.length > 0 ? (\n        <div>\n          <Checkout step={1} step1=\"process\" />\n          <Form labelCol={{ span: 6 }} wrapperCol={{ span: 14 }}>\n            <Form.Item\n              label=\"Username\"\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your FullName!\",\n                },\n              ]}\n            >\n              <Input\n                prefix={<UserOutlined />}\n                name=\"username\"\n                value={shippingInfo.username}\n                onChange={handleChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"address\"\n              label=\"Address\"\n              rules={[{ required: true, message: \"Enter your Address\" }]}\n            >\n              <Input\n                name=\"address\"\n                value={shippingInfo.address}\n                onChange={handleChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"city\"\n              label=\"City\"\n              rules={[{ required: true, message: \"Enter your city location\" }]}\n            >\n              <Input\n                name=\"city\"\n                value={shippingInfo.city}\n                onChange={handleChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"country\"\n              label=\"Country\"\n              rules={[{ required: true, message: \"Enter your Country\" }]}\n            >\n              <Input\n                name=\"country\"\n                value={shippingInfo.country}\n                onChange={handleChange}\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"postal\"\n              label=\"Postal\"\n              rules={[{ required: true, message: \"Enter your Postal code\" }]}\n            >\n              <Input\n                min={0}\n                size=\"small\"\n                value={shippingInfo.postal}\n                name=\"postal\"\n                onChange={handleChange}\n              />\n            </Form.Item>\n\n            <Form.Item name=\"button\" wrapperCol={{ offset: 12, span: 12 }}>\n              <Button type=\"primary\" onClick={handleSubmit}>\n                Continue\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      ) : (\n        history.push(\"/sign-in\")\n      )}\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","//---------Function-----------//\n/**\n persist the shipping info  in the localstorage\n */\nexport const shipping = (param) => async (dispatch, getState) => {\n  dispatch({ type: \"shipping\", payload: param });\n  localStorage.setItem(\n    \"shippingInfo\",\n    JSON.stringify(getState().shipping.shippingInfo)\n  ); //perist in localstorage\n};\n","import React from \"react\";\n\nconst Rating = ({ rating, numReviews }) => {\n  return (\n    <div className=\"rating\">\n      {/*Repeat for more stars*/}\n      {/*5 stars*/}\n      <span>\n        <i\n          className={\n            rating >= 1\n              ? \"fa fa-star\"\n              : rating >= 0.5\n              ? \"fa fa-star-half-o\"\n              : \"fa fa-star-o\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          className={\n            rating >= 2\n              ? \"fa fa-star\"\n              : rating >= 1.5\n              ? \"fa fa-star-half-o\"\n              : \"fa fa-star-o\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          className={\n            rating >= 3\n              ? \"fa fa-star\"\n              : rating >= 2.5\n              ? \"fa fa-star-half-o\"\n              : \"fa fa-star-o\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          className={\n            rating >= 4\n              ? \"fa fa-star\"\n              : rating >= 3.5\n              ? \"fa fa-star-half-o\"\n              : \"fa fa-star-o\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          className={\n            rating >= 5\n              ? \"fa fa-star\"\n              : rating >= 4.5\n              ? \"fa fa-star-half-o\"\n              : \"fa fa-star-o\"\n          }\n        ></i>\n      </span>\n      <span>{`${numReviews} Reviews`}</span>\n    </div>\n  );\n}; //react component definition\n\nexport default Rating; //export for external file to use\n","import React from \"react\";\nimport Rating from \"./rating\";\n\nconst Product = ({ price, image, numReviews, rating, _id }) => {\n  return (\n    <div className=\"card\" key={_id}>\n      {/*image section on card as a link*/}\n      <a href={`/products/${_id}`}>\n        <img src={image} className=\"card-image\" alt=\"mens pant\" />\n      </a>\n\n      {/*card body section contianing containers of name, rating and price*/}\n      <div className=\"card-body\">\n        {/*product name as link*/}\n        <div className=\"name\">\n          <a href={`/products/${_id}`}>\n            <h2>Mens pant</h2>\n          </a>\n        </div>\n\n        {/*Rating usisng font awesome*/}\n        <Rating rating={rating} numReviews={numReviews}  />\n\n        {/*Price*/}\n        <div className=\"price\">{price}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Product; //export for external file to use\n","export const get_products = \"get_products\";\nexport const product_view_success = \"product_view_success\";\nexport const product_view_error = \"product_view_error\";\nexport const product_view_loading = \"product_view_loading\";\nexport const removeFromCart = \"remove_from_cart\";\n","import { get_products } from \"../types\";\nconst axios = require(\"axios\"); //require from node_module\n\nexport const getProducts = () => async (dispatch) => {\n  await axios({\n    method: \"GET\",\n    url: \"https://ekenecom.herokuapp.com/api/products\",\n  }).then((res) => {\n    const { data } = res;\n    dispatch({ type: get_products, payload: data.data });\n  });\n};\n","import React from \"react\";\nimport Product from \"../../Product\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProducts } from \"../../../Actions/getProducts\";\nimport { useEffect } from \"react\";\n\n//The Homescreen component renders all the products when the user navigates to the home path '/'\nconst Homescreen = () => {\n  //dispath the action to getProducts on initial render of page using useDispatch and useEffect\n  //get the state value from a reducer using the useSelector\n  //use the state value in code\n\n  const dispatch = useDispatch(); //dispatch definition\n  useEffect(() => {\n    dispatch(getProducts()); //call the action and take it to the reducer\n  }, [dispatch]);\n\n  const data = useSelector((state) => state.products); //get the state value from the reducer in the store\n  const { products } = data;\n\n  return (\n    <div className=\"row center\">\n      {/*This displays all the product */}\n      {products.map((data) => {\n        return <Product key={data._id} {...data} />;\n      })}\n    </div>\n  );\n};\n\nexport default Homescreen; //export for external file to use\n","import {\n  product_view_success,\n  product_view_loading,\n  product_view_error,\n} from \"../types\";\n\nconst axios = require(\"axios\"); //require data from node_module\n\nconst productView = (_id) => async (dispatch) => {\n  //have loading action before data is gotten\n  //transport the data to the reducer\n\n  dispatch({ type: product_view_loading }); //dispatch to transport action to reducer\n  try {\n    const { data } = await axios.get(\n      `https://ekenecom.herokuapp.com/api/products/${_id}`\n    ); //make an ajax request to server\n    dispatch({ type: product_view_success, payload: data.data }); //dispatch action to reducer\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default productView; //export for external file to use\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport const Loading = () => {\n  // <i className=\"fa fa-spinner fa-spin\"></i>;\n  return (\n    <div>\n      <span>\n        <Spin />\n        Loading\n      </span>\n    </div>\n  );\n};\n\nexport const Error = ({ value }) => {\n  console.log(value);\n  return (\n    <div>\n      <h1>{value}</h1>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\n\nimport Rating from \"../../rating\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport productView from \"../../../Actions/productView\"; //action\n\nimport { Loading } from \"../Loading\";\n\n/*When the user navigate to the path /product/:id, we ge the product that matches the id\nin this component Productviewscreen\nthen we create a page for the specific product \n*/\nconst Productviewscreen = () => {\n  const { id } = useParams(); //get the id parsed from the url\n  const history = useHistory(); //allows us to manually route a path\n\n  const dispatch = useDispatch(); //dispatch definition\n  const [quantity, setQuantity] = useState(1); //useState definition\n\n  useEffect(() => {\n    dispatch(productView(id)); //action call to transport action to reducer\n  }, [dispatch, id]);\n\n  const { single_product, loading } = useSelector(\n    (state) => state.product_view\n  ); //get the state value of the reducer in the store\n\n  const product = single_product[0];\n\n  const handleAddToCart = (e) => {\n    history.push(`/cart/${id}?qty=${quantity}`); //manually route to a path\n  }; //javascript function definition\n\n  return (\n    <div>\n      {loading ? (\n        <Loading />\n      ) : (\n        //start of html\n        <div className=\"row top\">\n          <Link to=\"/\">\n            <span>\n              <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back to Home\n            </span>\n          </Link>\n\n          <div className=\"col-2\">\n            <img className=\"large\" src={product.image} alt={product.name} />\n          </div>\n          <div className=\"col-1\">\n            <ul>\n              <li>Name: {product.name}</li>\n              <li>\n                <Rating\n                  rating={product.rating}\n                  numReviews={product.numReviews}\n                />\n              </li>\n              <li>Description: {product.description}</li>\n              <li>Price: {product.price}</li>\n            </ul>\n          </div>\n          <div className=\"col-1\">\n            <div className=\"card card-body\">\n              <ul>\n                <li>\n                  <div className=\"row\">\n                    <div>Price</div>\n                    <div>{product.price}</div>\n                  </div>\n                </li>\n                <li>\n                  <div>\n                    <Rating\n                      rating={product.rating}\n                      numReviews={product.numReviews}\n                    />\n                  </div>\n                </li>\n                <li>\n                  <div className=\"row\">\n                    <div>Stock</div>\n                    <div>\n                      <span\n                        className={\n                          product.inStockCount >= 5\n                            ? \"primary\"\n                            : product.inStockCount < 5 &&\n                              product.inStockCount > 0\n                            ? \"primary low\"\n                            : \"danger\"\n                        }\n                      >\n                        InStock({product.inStockCount})\n                      </span>\n                    </div>\n                  </div>\n                </li>\n                {product.inStockCount > 0 && (\n                  <>\n                    <div className=\"row\">\n                      <li>\n                        <div>Qty:</div>\n                        <div>\n                          <select\n                            value={quantity}\n                            onChange={(e) => setQuantity(e.target.value)}\n                          >\n                            {[...Array(product.inStockCount).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </select>\n                        </div>\n                      </li>\n                    </div>\n                    <li className=\"row center\">\n                      <button\n                        type=\"button\"\n                        className=\"btn\"\n                        onClick={handleAddToCart}\n                      >\n                        Add to cart\n                      </button>\n                    </li>\n                  </>\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n        //end of html\n      )}\n    </div>\n  );\n}; //react component definition\n\nexport default Productviewscreen; //export for external file to use\n","const axios = require(\"axios\"); //require from external file\n\nexport const addToCart = (_id, qty) => async (dispatch, getState) => {\n  //make an ajax request for the single data\n  //dipatch the data with the number of quantiry\n  //save the items gotten from the reducer state to local storage for persistence\n  try {\n    const { data } = await axios.get(\n      `https://ekenecom.herokuapp.com/products/${_id}`\n    ); //make an ajax request to the server\n    const product = data.data[0]; //get the object\n    dispatch({\n      type: \"addToCart\",\n      payload: {\n        name: product.name,\n        price: product.price,\n        image: product.image,\n        product: product._id,\n        qty,\n      },\n    }); //disatch action to reducer for handling\n    localStorage.setItem(\n      \"cartItems\",\n      JSON.stringify(getState().cart.cartItems)\n    ); //save the cartItems in localstorage\n  } catch (error) {\n    console.log(error.message);\n  }\n}; //function definition\n","export const Message = (props) => {\n  return <div className=\"error\">{props.children}</div>;\n}; //react component\n","import { removeFromCart } from \"../types\";\n\nexport const removeAction = (id) => async (dispatch, getState) => {\n  dispatch({ type: removeFromCart, payload: id }); //dispatch action to reducer to handle\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems)); //set value to key in localstorage\n};\n","import React from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../../../Actions/addToCart\";\nimport { Message } from \"../../Message\";\nimport { Link } from \"react-router-dom\";\nimport \"../../../styles/error.css\";\nimport \"../../../styles/cart.css\";\nimport { removeAction } from \"../../../Actions/removeFromCart\";\n\nconst CartScreen = () => {\n  //we get the id and query passed from the url using useParams and useHistory\n  //we call the action to addToCart on the page render using useEffect\n  //we get the item in cart from the reducer state in store\n  const dispatch = useDispatch();\n  const { id } = useParams(); //get the id when the dynamic route is called\n  const history = useHistory();\n  const qty = history.location.search.split(\"=\")[1];\n  const cart = useSelector((state) => state.cart); //get the state value from reducer state\n  const { cartItems } = cart; //object destructuring for value\n\n  useEffect(() => {\n    dispatch(addToCart(id, qty));\n  }, [dispatch, id, qty]); //useEffect hook definition\n\n  return (\n    <div className=\"main_block\">\n      <div className=\"col-1\">\n        {cartItems.length === 0 ? (\n          <Message>\n            Cart Empty <Link to=\"/\">Go shopping</Link>\n          </Message>\n        ) : (\n          <ul>\n            {cartItems.map((item) => {\n              return (\n                <main key={item.product} className=\"main\">\n                  <div className=\"cartitems contain\">\n                    <img\n                      src={item.image}\n                      alt={item.name}\n                      className=\"cartitems contain image\"\n                    />\n                  </div>\n                  <div className=\"cartitems contain name\">\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                  </div>\n                  <div className=\"cartitems contain\">\n                    <select\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(Number(item.qty)).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"cartitems contain price\">{item.price}</div>\n                  <div className=\"cartitems contain\">\n                    <button\n                      type=\"button\"\n                      className=\"cartitems contain button\"\n                      onClick={() => dispatch(removeAction(item.product))}\n                    >\n                      remove\n                    </button>\n                  </div>\n                </main>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      <div className=\"col-2 cartscreen\">\n        <div>\n          Number of quantities:\n          {cartItems.reduce((a, x) => a + Number(x.qty), 0)}\n          ($total price:{\" \"}\n          {cartItems.reduce((a, x) => a + Number(x.qty * x.price), 0)})\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"col-2_button\"\n            disabled={cartItems.length > 0 ? false : true}\n            onClick={() => history.push(\"/sign-in?redirect=shipping\")}\n          >\n            Proceed to checkout\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}; //react component definition\n\nexport default CartScreen; //export for external file to use\n","const axios = require(\"axios\"); //require from node module\n\nexport const Signin = (param) => async (dispatch, getState) => {\n  //get the user email and password when action is called\n\n  const { email, password } = param;\n\n  const result = await axios\n    .post(\"https://ekenecom.herokuapp.com/api/users/signin\", {\n      email: email,\n      password: password,\n    })\n    .catch((err) => dispatch({ type: \"error\", payload: err.message })); //make an ajax request\n\n  try {\n    //try to only get the data from server then dispatch to reducer\n    const { data } = result;\n    //dispatch to reducer\n    dispatch({ type: \"signIn\", payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(getState().user.userInfo)); //set userINfo in localstorage\n  } catch (err) {\n    dispatch({ type: \"error\", payload: err.message });\n  }\n};\n\nexport const signOut = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\"); //remove item from local storage\n  localStorage.removeItem(\"cartItems\"); //remove item from local storage\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Signin } from \"../../../Actions/signin\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport \"../../../styles/signin.css\";\n\nexport const Signin_screen = () => {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.userInfo);\n\n  //state for storing user email and password in input field\n  const [people, setPeople] = useState({ email: \"\", password: \"\" }); //state value and handler definition\n\n  //function to update the state value\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setPeople({ ...people, [name]: value }); //state handler call\n  };\n  const history = useHistory();\n  //function to call the action signin\n  const handleSubmit = () => {\n    if (people) {\n      dispatch(Signin(people));\n      setPeople({ email: \"\", password: \"\" }); //state handler call\n      const url = history.location.search.split(\"=\")[1];\n      if (url == \"shipping\") {\n        history.push(\"/shipping\");\n      }\n    } else {\n      alert(\"Enter your email or password\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"form_block\">\n        <form>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={people.email}\n            placeholder=\"Enter your email\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={people.password}\n            placeholder=\"Enter your password\"\n            onChange={handleChange}\n          />\n          <button type=\"button\" onClick={handleSubmit}>\n            Signin\n          </button>\n          <p>\n            Create an account? <Link to=\"/Register\">Register</Link>\n          </p>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}; //javascript function definition\n","const axios = require(\"axios\"); //for ajax request\n\nexport const RegisterAction = (param) => async (dispatch) => {\n  const { firstname, lastname, email, password } = param;\n  const username = firstname + \" \" + lastname;\n  const user = axios\n    .post(\"https://ekenecom.herokuapp.com/api/users/register\", {\n      username,\n      email,\n      password,\n    })\n    .catch((err) => dispatch({ type: \"error\", payload: err.message })); //make an ajax request\n  dispatch({ type: \"register\", payload: user }); //dispatch action to reducer\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { RegisterAction } from \"../../../Actions/register\";\nimport { useDispatch } from \"react-redux\";\n\nexport const RegisterScreen = () => {\n  /**Saaving user\n   * get the value from the input\n   * store in state value\n   * call the dispatch the action to reducer\n   * add user to database\n   */\n  const [person, setPerson] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n  }); //usestate definition\n\n  const dispatch = useDispatch(); //for calling action and taking then to reducer\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setPerson({ ...person, [name]: value }); //state handler call\n  };\n\n  const handleSubmit = (e) => {\n    dispatch(RegisterAction(person)); //dispatch action to reducer\n    setPerson({ firstname: \"\", lastname: \"\", email: \"\", password: \"\" });\n  }; //javascript function call\n\n  return (\n    <React.Fragment>\n      <div className=\"form_block\">\n        <form>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"Firstname\"\n            value={person.firstname}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"Lastname\"\n            value={person.lastname}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"a@gmail.com\"\n            value={person.email}\n            onChange={handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={person.password}\n            onChange={handleChange}\n          />\n          <button type=\"button\" onClick={handleSubmit}>\n            Register\n          </button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}; //React component definition\n","import React from \"react\";\nimport { Checkout } from \"../../Checkout\";\nimport { Radio, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst Payment = () => {\n  const shippingaddr = useSelector((state) => state.shipping.shippingInfo);\n  const history = useHistory();\n  const [payment, setPayment] = useState(\"paypal\");\n  const [loading, setLoading] = useState(false);\n\n  //----------------function-------------//\n  /**\n   * This function is meant to update the state value and persist value in localStorage\n   */\n  const handleChange = (e) => {\n    setPayment(e.target.value);\n    localStorage.setItem(\"payment\", JSON.stringify(payment));\n    setLoading(true);\n    setTimeout(() => {\n      history.push(\"/make_order\");\n    }, 9000);\n  };\n\n  const customSpin = <LoadingOutlined spin style={{ fontSize: 24 }} />;\n  return (\n    <>\n      {shippingaddr.username ? (\n        <div>\n          <Checkout\n            status=\"process\"\n            step1=\"finish\"\n            step2=\"process\"\n            status=\"finish\"\n          />\n          <div style={{ position: \"relative\" }}>\n            {loading ? <Spin indicator={customSpin} /> : \"\"}\n\n            <Radio.Group\n              defaultValue=\"s\"\n              buttonStyle=\"solid\"\n              style={{ margin: \"10% 30%\" }}\n            >\n              <Radio.Button value=\"stripe\" onChange={handleChange}>\n                Stripe\n              </Radio.Button>\n              <Radio.Button value=\"paypal\" onChange={handleChange}>\n                Paypal\n              </Radio.Button>\n            </Radio.Group>\n          </div>\n        </div>\n      ) : (\n        history.push(\"/shipping\")\n      )}\n    </>\n  );\n};\n\nexport default Payment;\n","import React from \"react\";\nimport \"../../../styles/order.css\";\nimport { Checkout } from \"../../Checkout\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { addToCart } from \"../../../Actions/addToCart\";\nimport { removeAction } from \"../../../Actions/removeFromCart\";\nimport { Button } from \"antd\";\nimport { RightSquareOutlined } from \"@ant-design/icons\";\nimport { mOrder } from \"../../../Actions/makeOrder\";\n\nexport const Order = () => {\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector((state) => state.shipping);\n  const { shippingInfo } = user;\n  const address =\n    shippingInfo.address +\n    \" \" +\n    shippingInfo.city.charAt(0).toUpperCase() +\n    shippingInfo.city.slice(1) +\n    \",\" +\n    shippingInfo.country.charAt(0).toUpperCase() +\n    shippingInfo.country.slice(1) +\n    \",\" +\n    shippingInfo.postal;\n  const payment = localStorage.getItem(\"payment\");\n  const price = cartItems.reduce((a, x) => a + Number(x.qty * x.price), 0);\n  const tP = Number((10 / 100) * price * 5);\n  const handleSubmit = () => {\n    dispatch(mOrder(shippingInfo, cartItems, payment, tP));\n    history.push(\"/order_detail\");\n  };\n  return (\n    <div>\n      <Checkout step={4} step3=\"process\" step1=\"finish\" step2=\"finish\" />\n      <div className=\"Order_Container\">\n        <div className=\"i1\">\n          <h3>Shipping</h3>\n          <h5>Name: {shippingInfo.username}</h5>\n          <h5>Address:{address}</h5>\n        </div>\n        <div className=\"i3\">\n          <h3>Order Summary</h3>\n          <h5>\n            Order price:\n            {cartItems.reduce((a, x) => a + Number(x.qty + x.price), 0)}\n          </h5>\n          <h5>Order Gst: 10%</h5>\n          <h5>Tax: $5</h5>\n          <h5>Total price:{Number((10 / 100) * price * 5)}</h5>\n          <Button\n            type=\"primary\"\n            onClick={handleSubmit}\n            icon={<RightSquareOutlined />}\n          >\n            Make Order\n          </Button>\n        </div>\n        <div className=\"i2\">\n          <h3>Payment</h3>\n          <h5>Method:{payment}</h5>\n        </div>\n\n        <div className=\"i4\">\n          <h3>Order Item</h3>\n          <div>\n            <ul>\n              {cartItems.map((item) => {\n                return (\n                  <main key={item.product} className=\"main\">\n                    <div className=\"cartitems contain\">\n                      <img\n                        src={item.image}\n                        alt={item.name}\n                        className=\"cartitems contain image\"\n                      />\n                    </div>\n                    <div className=\"cartitems contain name\">\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\n                    </div>\n                    <div className=\"cartitems contain\">\n                      <select\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(Number(item.qty)).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div className=\"cartitems contain price\">{item.price}</div>\n                    <div className=\"cartitems contain\">\n                      <button\n                        type=\"button\"\n                        className=\"cartitems contain button\"\n                        onClick={() => dispatch(removeAction(item.product))}\n                      >\n                        remove\n                      </button>\n                    </div>\n                  </main>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; //javascript funtion definition\n","/**\n *\n * @param {Object} sI -This is abbr for shippingInfo\n * @param {Object} cI -This is abbr for cartItems\n * @param {String} pM -This is abbr for paymentMethod\n * @param {Number} tP -This is abbr for totalPrice\n * @description This function is to make ajax post request to the server to save\n * the user order details and the user making the order using jwt token.\n * We are not going to persist the data in localStorage beacause it is too large\n * We will clear all the datas in localStorage after all the order has been successfully made\n * @returns\n */\n\nconst axios = require(\"axios\");\n\nexport const mOrder = (sI, cI, pM, tP) => async (dispatch) => {\n  dispatch({ type: \"request\" });\n  try {\n  } catch {}\n};\n","import React from \"react\";\nimport { Button, Drawer } from \"antd\";\nimport { DoubleLeftOutlined } from \"@ant-design/icons\";\nimport { useState } from \"react\";\nimport ShippingScreen from \"./component/routes/screens/ShippingScreen\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport Homescreen from \"./component/routes/screens/Homescreen\";\nimport Productviewscreen from \"./component/routes/screens/ProductViewScreen\";\nimport CartScreen from \"./component/routes/screens/CartScreen\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Signin_screen } from \"./component/routes/screens/Signin\";\nimport { signOut } from \"./Actions/signin\";\nimport { RegisterScreen } from \"./component/routes/screens/Register\";\nimport Payment from \"./component/routes/screens/Payment\";\nimport { Order } from \"./component/routes/screens/Order\";\n\nconst Main = () => {\n  const history = useHistory(); //for manual routing in search box\n\n  //For cart items\n  //we get the cartItem from reducer state saved in initial state of store\n  //if the length is greater than 0 we show the badge number based on the length of the cartItem array\n  const cart = useSelector((state) => state.cart); //get the state from the reducer state\n  const { cartItems } = cart; //cartItems\n\n  //for user\n  //check if user is in state already and show their name instead of signin\n  //if the length of the array is >0 we show the username else we show signin\n  const user = useSelector((state) => state.user); //get the state value of the state\n  const { userInfo } = user;\n\n  //signout function to call signout action\n  const dispatch = useDispatch();\n  const signout = () => {\n    dispatch(signOut()); //action call\n    window.location.reload(true);\n  };\n\n  //for drawer\n  const [visible, setVisible] = useState(false); //useState definition\n  const userClick = () => {\n    setVisible(true);\n  };\n  const drawerClose = () => {\n    setVisible(false);\n  };\n  return (\n    <Router>\n      <div className=\"grid-container\">\n        <header className=\"row\">\n          {/*The brand section*/}\n          <div>\n            <Link to=\"/\" className=\"brand\">\n              Chizzy\n            </Link>\n          </div>\n\n          {/*The cart and sign-in section*/}\n          <div>\n            <Link to=\"/cart\">\n              cart\n              {cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>\n              )}\n            </Link>\n            {userInfo.length > 0 ? (\n              <Button\n                shape=\"circle\"\n                style={{ backgroundColor: \"orange\", color: \"white\" }}\n                onClick={userClick}\n              >\n                {userInfo[0].username\n                  .split(\" \")[0]\n                  .charAt(0)\n                  .concat(userInfo[0].username.split(\" \")[1].charAt(0))}\n              </Button>\n            ) : (\n              <Link to=\"/sign-in\">sign-in</Link>\n            )}\n          </div>\n        </header>\n\n        {/* Navigation drawer */}\n        <Drawer\n          title=\"Settings\"\n          placement=\"left\"\n          key=\"left\"\n          visible={visible}\n          onClose={drawerClose}\n          headerStyle={{ backgroundColor: \"#203040\" }}\n          bodyStyle={{ backgroundColor: \"white\" }}\n          closeIcon={<DoubleLeftOutlined />}\n        >\n          {userInfo.length > 0 ? (\n            <Link to=\"#\">{userInfo[0].username}</Link>\n          ) : (\n            <p></p>\n          )}\n          <p></p>\n          <Link to=\"/\" onClick={signout}>\n            <i className=\"fa fa-sign-out\" aria-hidden=\"true\">\n              Signout\n            </i>\n          </Link>\n        </Drawer>\n\n        <main>\n          {/*Routes*/}\n\n          {/*Homeroute to call the homescreen component*/}\n          <Switch>\n            <Route path=\"/\" exact>\n              <Homescreen />\n            </Route>\n\n            {/*Route to show the product clicked on*/}\n            <Route\n              path=\"/products/:id\"\n              children={<Productviewscreen />}\n            ></Route>\n\n            {/*Route for cart screen*/}\n            <Route path=\"/cart/:id?\" children={<CartScreen />}></Route>\n\n            {/*Route for sign in screen*/}\n            <Route path=\"/sign-in\" children={<Signin_screen />}></Route>\n\n            {/* Route for Register screen */}\n            <Route path=\"/Register\" children={<RegisterScreen />}></Route>\n\n            {/* Route for shipping screen */}\n            <Route path=\"/shipping\" children={<ShippingScreen />}></Route>\n\n            {/* Route for payment screen */}\n            <Route path=\"/payment\" children={<Payment />}></Route>\n\n            {/*Route for order screen*/}\n            <Route path=\"/make_order\" children={<Order />}></Route>\n          </Switch>\n        </main>\n\n        <footer className=\"row center\">\n          <p>@All right reserved</p>\n        </footer>\n      </div>\n    </Router>\n  );\n}; //react component definition\n\nexport default Main; //export for external file to use\n\n/**\n *             (\n              {\n                /* <div className=\"dropdown\">\n                <Link to=\"#\">{userInfo[0].username}</Link>\n                <div className=\"dropdown-content\">\n                  <Link to=\"/\" onClick={signout}>\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\">\n                      Signout\n                    </i>\n                  </Link>\n                </div>\n              </div> */\n// }\n// )\n//  */\n","import { get_products } from \"../types\";\n\nconst Product_Reducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case get_products:\n      return { ...state, products: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default Product_Reducer; //export for external file to use\n","import {\n  product_view_success,\n  product_view_loading,\n  product_view_error,\n} from \"../types\";\n\nconst Product_View = (\n  state = { single_product: {}, loading: true},\n  action\n) => {\n  switch (action.type) {\n    case product_view_loading:\n      return { ...state, loading: true };\n    case product_view_success:\n      return { ...state, single_product: action.payload, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default Product_View; // export for external file to use\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport Product_Reducer from \"./Reducers/Product_Reducer\";\nimport Product_View from \"./Reducers/Product_View\";\nimport thunk from \"redux-thunk\";\nimport { AddToCart } from \"./Reducers/AddToCart\";\nimport { SignIn } from \"./Reducers/Signin\";\nimport { Register } from \"./Reducers/Register\";\nimport { Shipping } from \"./Reducers/Shipping\";\n\nconst allReducers = combineReducers({\n  products: Product_Reducer,\n  product_view: Product_View,\n  cart: AddToCart,\n  user: SignIn,\n  register: Register,\n  shipping: Shipping,\n});\nconst composeEnhanced = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n  },\n  user: {\n    userInfo: localStorage.getItem(\"userInfo\")\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\n      : [],\n  },\n  shipping: {\n    shippingInfo: localStorage.getItem(\"shipping\")\n      ? JSON.parse(localStorage.getItem(\"shipping\"))\n      : [],\n  },\n};\nconst store = createStore(\n  allReducers,\n  initialState,\n  composeEnhanced(applyMiddleware(thunk))\n); //create a globalize store\n\nexport default store; //export for external file to use\n","import { removeFromCart } from \"../types\";\n\nexport const AddToCart = (state = { cartItems: [] }, action) => {\n  //get the item passed in payload\n  //check if item exist already in cart\n  //if exist update it\n  //if not create a new item object in the array of cartItems\n  //return default state  when no action is dispatch\n\n  switch (action.type) {\n    case \"addToCart\":\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product); //we get the one that matches\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }; //update the object in the array\n      } else {\n        return { ...state, cartItems: [...state.cartItems, item] }; //create a new object\n      }\n    case removeFromCart:\n      //get the id\n      //filter the cartItem to remove the id\n      //update the cartItem\n      const removed_id = action.payload; //get the id\n      const newCartItem = state.cartItems.filter(\n        (x) => x.product !== removed_id\n      );\n      localStorage.removeItem(\"cartItems\"); //remove cartItems from localstorage\n      return { ...state, cartItems: newCartItem };\n    default:\n      return state;\n  }\n}; //javascript function definition\n","export const SignIn = (state = { userInfo: [], error: \"\" }, action) => {\n  switch (action.type) {\n    case \"signIn\":\n      const { user } = action.payload;\n      return { ...state, userInfo: user };\n    case \"error\":\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const Register = (state = { user: [] }, action) => {\n  switch (action.type) {\n    case \"register\":\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n};\n","export const Shipping = (state = { shippingInfo: {} }, action) => {\n  switch (action.type) {\n    case \"shipping\":\n      return { ...state, shippingInfo: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport Main from \"./Main\";\nimport \"./styles/index.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}; //react component definition\n\nReactDom.render(<App />, document.getElementById(\"root\")); //render element to the id root\n"],"sourceRoot":""}